generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id             String       @id @default(uuid())
  name           String
  email          String       @unique
  org            Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  Comment        Comment[]
  cardId         String?
}

model Organization {
  id      String  @id @default(uuid())
  name    String
  members User[]
  boards  Board[]
}

model Comment {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  text      String
  Card      Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
  cardId    String
  createdAt DateTime @default(now())
}

model Card {
  id          String    @id @default(uuid())
  title       String
  description String?
  comments    Comment[]
  List        List      @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId      String
  label       String?
  members     String[]
  order       Int?
  Board       Board?    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId     String?
}

model List {
  id          String @id @default(uuid())
  description String
  cards       Card[]
  Board       Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId     String
  order       Int?
}

model Board {
  id             String       @id @default(uuid())
  title          String
  lists          List[]
  cards          Card[]
  Organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}
